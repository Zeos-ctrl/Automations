# pydoc-markdown.yml
# Configuration file for pydoc-markdown documentation generation

# Specify where to find the Python modules
loaders:
  - type: python
    search_path: [src]  # Adjust to your source directory
    
    # Specify modules to document
    # You can use wildcards or specific module names
    modules:
      # Option 1: Document everything in src/
      - "**"
      
      # Option 2: Document specific packages (uncomment and customize)
      # - mypackage
      # - mypackage.submodule
      # - another_package
    
    # Filter options
    filter:
      # Skip modules without any content
      skip_empty_modules: true
      
      # Include/exclude private members (starting with _)
      exclude_private: false
      
      # Include/exclude special methods (__init__, __str__, etc.)
      exclude_special: false
      
      # Only include members with docstrings
      documented_only: false
      
      # Exclude specific names (regex patterns)
      exclude:
        - "test_.*"
        - ".*_test"

# Processing pipeline
processors:
  # Filter processor - controls what gets documented
  - type: filter
    skip_empty_modules: true
    documented_only: false
    exclude_private: false
    exclude_special: false
    
    # Skip specific member types
    skip_classes: false
    skip_functions: false
    skip_modules: false
  
  # Smart processor - improves formatting
  - type: smart
    # Show full module path in headers
    show_module_path: true
    
    # Add anchors for cross-references
    add_anchors: true
  
  # Crossref processor - creates cross-references between items
  - type: crossref
    # Enable GitHub-style links
    use_md_links: true

# Renderer configuration
renderer:
  type: markdown
  
  # Header rendering
  render_module_header: true
  render_toc: true
  render_toc_title: "## Contents"
  
  # Templates for headers (customize format here)
  render_module_header_template: |
    # {module_name}
    
    **Module:** `{module_path}`
    
  render_class_header_template: |
    ## {class_name}
    
  render_function_header_template: |
    ### {function_name}
    
  # Make headers more descriptive
  descriptive_class_title: true
  descriptive_function_title: true
  
  # Add class prefix to methods and members
  add_method_class_prefix: true
  add_member_class_prefix: true
  
  # Code block formatting
  code_block_style: fenced  # Use ``` for code blocks
  code_block_language: python
  format_code: true
  
  # Include 'def' in function signatures
  signature_with_def: true
  signature_code_block: true
  
  # Docstring rendering
  docstring_style: markdown  # Render docstrings as markdown
  docstring_ignore_init: false  # Include __init__ docstrings
  
  # Fixed header levels for consistency
  use_fixed_header_levels: true
  header_level_by_type:
    Module: 1
    Class: 2
    Method: 3
    Function: 3
    Data: 3
  
  # Source code inclusion (optional)
  render_typehint_in_signature: true
  include_source: false  # Set to true to include source code
  source_format: python
  source_linenos: true
  
  # Other options
  markdown_escape: false  # Don't escape markdown in docstrings
  html_headers: false
  
# Output configuration (for batch mode)
output:
  directory: docs
  file: api_reference.md
  
# Additional options
options:
  # Encoding for source files
  encoding: utf-8
  
  # Python version (for better parsing)
  python_version: "3.8"
  
  # Verbose output
  verbose: false
  
  # Fail on warnings
  strict: false
